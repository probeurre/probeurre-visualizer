{"./.eslintrc.js":{},"./.travis.yml":{},"./Gruntfile.js":{},"./docs/_config.yml":{},"./docs/_css/_solarized.scss":{},"./docs/_css/_typography.scss":{},"./docs/_css/_variables.scss":{},"./docs/_css/bourbon/_bourbon-deprecated-upcoming.scss":{},"./docs/_css/bourbon/_bourbon.scss":{},"./docs/_css/bourbon/addons/_button.scss":{},"./docs/_css/bourbon/addons/_clearfix.scss":{},"./docs/_css/bourbon/addons/_directional-values.scss":{},"./docs/_css/bourbon/addons/_ellipsis.scss":{},"./docs/_css/bourbon/addons/_font-family.scss":{},"./docs/_css/bourbon/addons/_hide-text.scss":{},"./docs/_css/bourbon/addons/_html5-input-types.scss":{},"./docs/_css/bourbon/addons/_position.scss":{},"./docs/_css/bourbon/addons/_prefixer.scss":{},"./docs/_css/bourbon/addons/_retina-image.scss":{},"./docs/_css/bourbon/addons/_size.scss":{},"./docs/_css/bourbon/addons/_timing-functions.scss":{},"./docs/_css/bourbon/addons/_triangle.scss":{},"./docs/_css/bourbon/addons/_word-wrap.scss":{},"./docs/_css/bourbon/css3/_animation.scss":{},"./docs/_css/bourbon/css3/_appearance.scss":{},"./docs/_css/bourbon/css3/_backface-visibility.scss":{},"./docs/_css/bourbon/css3/_background-image.scss":{},"./docs/_css/bourbon/css3/_background.scss":{},"./docs/_css/bourbon/css3/_border-image.scss":{},"./docs/_css/bourbon/css3/_border-radius.scss":{},"./docs/_css/bourbon/css3/_box-sizing.scss":{},"./docs/_css/bourbon/css3/_calc.scss":{},"./docs/_css/bourbon/css3/_columns.scss":{},"./docs/_css/bourbon/css3/_filter.scss":{},"./docs/_css/bourbon/css3/_flex-box.scss":{"177":{"begin":177,"end":179,"codeStart":180,"content":"2009 - TODO: parse values into flex-direction/flex-wrap\n2011 - TODO: parse values into flex-direction/flex-wrap\n2012 - flex-flow (flex-direction || flex-wrap)\n","info":{"type":"singleline"},"code":"@mixin flex-flow($value) {"}},"./docs/_css/bourbon/css3/_font-face.scss":{},"./docs/_css/bourbon/css3/_font-feature-settings.scss":{},"./docs/_css/bourbon/css3/_hidpi-media-query.scss":{},"./docs/_css/bourbon/css3/_hyphens.scss":{},"./docs/_css/bourbon/css3/_image-rendering.scss":{},"./docs/_css/bourbon/css3/_keyframes.scss":{},"./docs/_css/bourbon/css3/_linear-gradient.scss":{},"./docs/_css/bourbon/css3/_perspective.scss":{},"./docs/_css/bourbon/css3/_placeholder.scss":{},"./docs/_css/bourbon/css3/_radial-gradient.scss":{},"./docs/_css/bourbon/css3/_transform.scss":{},"./docs/_css/bourbon/css3/_transition.scss":{},"./docs/_css/bourbon/css3/_user-select.scss":{},"./docs/_css/bourbon/functions/_assign.scss":{},"./docs/_css/bourbon/functions/_color-lightness.scss":{},"./docs/_css/bourbon/functions/_flex-grid.scss":{},"./docs/_css/bourbon/functions/_golden-ratio.scss":{},"./docs/_css/bourbon/functions/_grid-width.scss":{},"./docs/_css/bourbon/functions/_modular-scale.scss":{},"./docs/_css/bourbon/functions/_px-to-em.scss":{},"./docs/_css/bourbon/functions/_px-to-rem.scss":{},"./docs/_css/bourbon/functions/_strip-units.scss":{},"./docs/_css/bourbon/functions/_tint-shade.scss":{},"./docs/_css/bourbon/functions/_transition-property-name.scss":{},"./docs/_css/bourbon/functions/_unpack.scss":{},"./docs/_css/bourbon/helpers/_convert-units.scss":{},"./docs/_css/bourbon/helpers/_gradient-positions-parser.scss":{},"./docs/_css/bourbon/helpers/_is-num.scss":{},"./docs/_css/bourbon/helpers/_linear-angle-parser.scss":{},"./docs/_css/bourbon/helpers/_linear-gradient-parser.scss":{},"./docs/_css/bourbon/helpers/_linear-positions-parser.scss":{},"./docs/_css/bourbon/helpers/_linear-side-corner-parser.scss":{},"./docs/_css/bourbon/helpers/_radial-arg-parser.scss":{},"./docs/_css/bourbon/helpers/_radial-gradient-parser.scss":{},"./docs/_css/bourbon/helpers/_radial-positions-parser.scss":{},"./docs/_css/bourbon/helpers/_render-gradients.scss":{},"./docs/_css/bourbon/helpers/_shape-size-stripper.scss":{},"./docs/_css/bourbon/helpers/_str-to-num.scss":{},"./docs/_css/bourbon/settings/_asset-pipeline.scss":{},"./docs/_css/bourbon/settings/_prefixer.scss":{},"./docs/_css/bourbon/settings/_px-to-em.scss":{},"./docs/_data/acknowledgements.yml":{},"./docs/_data/authors.yml":{},"./docs/_data/nav_docs.yml":{},"./docs/_data/nav_tips.yml":{},"./docs/_includes/blog_post.html":{},"./docs/_includes/nav_blog.html":{},"./docs/_includes/nav_docs.html":{},"./docs/_js/examples/hello.js":{},"./docs/_js/examples/markdown.js":{},"./docs/_js/examples/timer.js":{},"./docs/_js/examples/todo.js":{},"./docs/_js/html-jsx-lib.js":{},"./docs/_js/html-jsx.js":{},"./docs/_js/jsfiddle-integration.js":{},"./docs/_js/live_editor.js":{},"./docs/_layouts/default.html":{},"./docs/_layouts/docs.html":{},"./docs/_layouts/page.html":{},"./docs/_layouts/post.html":{},"./docs/_layouts/redirect.html":{},"./docs/_layouts/single.html":{},"./docs/_layouts/tips.html":{},"./docs/_plugins/authors.rb":{},"./docs/_plugins/header_links.rb":{},"./docs/_plugins/highlight_lines.rb":{},"./docs/_plugins/sidebar_item.rb":{},"./docs/blog/all.html":{},"./docs/blog/index.html":{},"./docs/css/codemirror.css":{},"./docs/css/main.css":{},"./docs/css/react.scss":{},"./docs/css/syntax.css":{},"./docs/js/codemirror.js":{},"./docs/js/es5-sham.min.js":{},"./docs/js/es5-shim.min.js":{},"./docs/js/html5shiv.min.js":{},"./docs/js/javascript.js":{"1":{"begin":1,"end":1,"codeStart":3,"content":"TODO actually recognize syntax of TypeScript constructs\n","info":{"type":"singleline"},"code":"CodeMirror.defineMode(\"javascript\", function(config, parserConfig) {"}},"./docs/js/jsfiddle-integration-babel.js":{},"./docs/js/marked.min.js":{},"./docs/js/react-dom.js":{},"./docs/js/react.js":{"2153":{"begin":2153,"end":2153,"codeStart":2154,"content":"TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n","info":{"type":"singleline"},"code":"      var doc = nativeEventTarget.ownerDocument;"},"2438":{"begin":2438,"end":2438,"codeStart":2439,"content":"TODO: This should never be null -- when is it?\n","info":{"type":"singleline"},"code":"    if (bankForRegistrationName) {"},"4157":{"begin":4157,"end":4161,"codeStart":4162,"content":"We currently don't have a way to track moves here but if we use iterators\ninstead of for..in we can zip the iterators and check if an item has\nmoved.\nTODO: If nothing has changed, return the prevChildren object so that we\ncan quickly bailout if nothing has changed.\n","info":{"type":"singleline"},"code":"    if (!nextChildren && !prevChildren) {"},"4996":{"begin":4996,"end":4999,"codeStart":5000,"content":"TODO: This will be deprecated because state should always keep a consistent\ntype signature and the only use case for this, is to avoid that.\n  ","info":{"type":"multiline","apidoc":true},"code":"  replaceState: function (newState, callback) {"},"5264":{"begin":5264,"end":5268,"codeStart":5269,"content":"Abstracts away all functionality of the reconciler that requires knowledge of\nthe browser context. TODO: These callers should be refactored to avoid the\nneed for this injection.\n","info":{"type":"multiline","apidoc":true},"code":"var ReactComponentBrowserEnvironment = {"},"5690":{"begin":5690,"end":5694,"codeStart":5695,"content":"Some existing components rely on inst.props even after they've been\ndestroyed (in event handlers).\nTODO: inst.props = null;\nTODO: inst.state = null;\nTODO: inst.context = null;\n","info":{"type":"singleline"},"code":"  },"},"5793":{"begin":5793,"end":5794,"codeStart":5795,"content":"TODO: Stop validating prop types here and only use the element\nvalidation.\n","info":{"type":"singleline"},"code":"    var componentName = this.getName();"},"6047":{"begin":6047,"end":6047,"codeStart":6048,"content":"TODO: An `isValidNode` function would probably be more appropriate\n","info":{"type":"singleline"},"code":"    renderedComponent === null || renderedComponent === false || ReactElement.isValidElement(renderedComponent)) ? \"development\" !== 'production' ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : invariant(false) : void 0;"},"6897":{"begin":6897,"end":6897,"codeStart":6898,"content":"TODO: Validate that text is allowed as a child of this node\n","info":{"type":"singleline"},"code":"        ret = escapeTextContentForBrowser(contentToUse);"},"6932":{"begin":6932,"end":6932,"codeStart":6933,"content":"TODO: Validate that text is allowed as a child of this node\n","info":{"type":"singleline"},"code":"        DOMLazyTree.queueText(lazyTree, contentToUse);"},"7007":{"begin":7007,"end":7022,"codeStart":7023,"content":"Reconciles the properties by detecting differences in property values and\nupdating the DOM as necessary. This function is probably the single most\ncritical path for performance optimization.\n\nTODO: Benchmark whether checking for changed values in memory actually\n      improves performance (especially statically positioned elements).\nTODO: Benchmark the effects of putting this at the top since 99% of props\n      do not change for a given reconciliation.\nTODO: Benchmark areas that can be improved with caching.\n\n@private\n@param {object} lastProps\n@param {object} nextProps\n@param {?DOMElement} node\n  ","info":{"type":"multiline","apidoc":true},"code":"  _updateDOMProperties: function (lastProps, nextProps, transaction) {"},"7955":{"begin":7955,"end":7955,"codeStart":7956,"content":"TODO: Shouldn't this be getChecked(props)?\n","info":{"type":"singleline"},"code":"    var checked = props.checked;"},"8062":{"begin":8062,"end":8062,"codeStart":8063,"content":"TODO (yungsters): Remove support for `selected` in <option>.\n","info":{"type":"singleline"},"code":"    if (\"development\" !== 'production') {"},"8606":{"begin":8606,"end":8620,"codeStart":8621,"content":"Text nodes violate a couple assumptions that React makes about components:\n\n - When mounting text into the DOM, adjacent text nodes are merged.\n - Text nodes cannot be assigned a React root ID.\n\nThis component is used to wrap strings between comment nodes so that they\ncan undergo the same reconciliation that is applied to elements.\n\nTODO: Investigate representing React components in the DOM with text nodes.\n\n@class ReactDOMTextComponent\n@extends ReactComponent\n@internal\n","info":{"type":"multiline","apidoc":true},"code":"var ReactDOMTextComponent = function (text) {"},"8622":{"begin":8622,"end":8622,"codeStart":8623,"content":"TODO: This is really a ReactText (ReactNode), not a ReactElement\n","info":{"type":"singleline"},"code":"  this._currentElement = text;"},"8705":{"begin":8705,"end":8707,"codeStart":8708,"content":"TODO: Save this as pending props and use performUpdateIfNecessary\nand/or updateComponent to do the actual update for consistency with\nother component types?\n","info":{"type":"singleline"},"code":"        this._stringText = nextStringText;"},"8840":{"begin":8840,"end":8840,"codeStart":8841,"content":"TODO (yungsters): Remove support for children content in <textarea>.\n","info":{"type":"singleline"},"code":"    var children = props.children;"},"9273":{"begin":9273,"end":9275,"codeStart":9276,"content":"TODO: This is currently true because these injections are shared between\nthe client and the server package. They should be built independently\nand not share any injection state. Then this problem will be solved.\n","info":{"type":"singleline"},"code":"    return;"},"9446":{"begin":9446,"end":9447,"codeStart":9448,"content":"TODO: ReactDefaultPerfAnalysis.getTotalTime() does not return the correct\nnumber.\n","info":{"type":"singleline"},"code":"  },"},"9507":{"begin":9507,"end":9507,"codeStart":9508,"content":"TODO: totalTime isn't that useful since it doesn't count paints/reflows\n","info":{"type":"singleline"},"code":"    var entry = ReactDefaultPerf._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1];"},"9681":{"begin":9681,"end":9684,"codeStart":9685,"content":"TODO: return number of DOM ops? could be misleading.\nTODO: measure dropped frames after reconcile?\nTODO: log total time of each reconcile and the top-level component\nclass that triggered it.\n","info":{"type":"singleline"},"code":"  var totalTime = 0;"},"10058":{"begin":10058,"end":10062,"codeStart":10063,"content":"Expose the type on the factory and the prototype so that it can be\neasily accessed on elements. E.g. `<Foo />.type === Foo`.\nThis should not be named `constructor` since this may not be the function\nthat created the element, and it may not even be a constructor.\nLegacy hook TODO: Warn if this is accessed\n","info":{"type":"singleline"},"code":"  factory.type = type;"},"10369":{"begin":10369,"end":10370,"codeStart":10371,"content":"The result can be nullish if a mock or a custom function is used.\nTODO: Drop this when these are no longer allowed as the type argument.\n","info":{"type":"singleline"},"code":"    if (element == null) {"},"10393":{"begin":10393,"end":10393,"codeStart":10394,"content":"Legacy hook TODO: Warn if this is accessed\n","info":{"type":"singleline"},"code":"    validatedFactory.type = type;"},"10599":{"begin":10599,"end":10601,"codeStart":10602,"content":"TODO: It may be a good idea to cache this to prevent unnecessary DOM\ntraversal, but caching is difficult to do correctly without using a\nmutation observer to listen for all DOM changes.\n","info":{"type":"singleline"},"code":"  while (inst._nativeParent) {"},"10933":{"begin":10933,"end":10933,"codeStart":10935,"content":"TODO: Replace this with ES6: var ReactInstanceMap = new Map();\n","info":{"type":"singleline"},"code":"var ReactInstanceMap = {"},"12195":{"begin":12195,"end":12204,"codeStart":12205,"content":"Sets a subset of the state. This only exists because _pendingState is\ninternal. This provides a merging strategy that is not available to deep\nproperties which is confusing. TODO: Expose pendingState or don't use it\nduring the merge.\n\n@param {ReactClass} publicInstance The instance that should rerender.\n@param {object} partialState Next partial state to be merged with state.\n@internal\n  ","info":{"type":"multiline","apidoc":true},"code":"  enqueueSetState: function (publicInstance, partialState) {"},"12947":{"begin":12947,"end":12953,"codeStart":12954,"content":"@see Transaction\n@abstract\n@final\n@return {array<object>} List of operation wrap procedures.\n  TODO: convert to array<TransactionWrapper>\n  ","info":{"type":"multiline","apidoc":true},"code":"  getTransactionWrappers: function () {"},"13085":{"begin":13085,"end":13086,"codeStart":13087,"content":"TODO: Bailing out early is just a perf optimization right?\nTODO: Removing the return statement should affect correctness?\n","info":{"type":"singleline"},"code":"      return;"},"13177":{"begin":13177,"end":13181,"codeStart":13183,"content":"TODO: Should this even be possible? The owner cannot change because\nit's forbidden by shouldUpdateReactComponent. The ref can change\nif you swap the keys of but not the refs. Reconsider where this check\nis made. It probably belongs where the key checking and\ninstantiateReactComponent is done.\n","info":{"type":"singleline"},"code":"  var prevEmpty = prevElement === null || prevElement === false;"},"13505":{"begin":13505,"end":13508,"codeStart":13509,"content":"TODO: The callback here is ignored when setState is called from\ncomponentWillMount. Either fix it or disallow doing so completely in\nfavor of getInitialState. Alternatively, we can disallow\ncomponentWillMount during server-side rendering.\n","info":{"type":"singleline"},"code":"    enqueueUpdate(internalInstance);"},"13570":{"begin":13570,"end":13579,"codeStart":13580,"content":"Sets a subset of the state. This only exists because _pendingState is\ninternal. This provides a merging strategy that is not available to deep\nproperties which is confusing. TODO: Expose pendingState or don't use it\nduring the merge.\n\n@param {ReactClass} publicInstance The instance that should rerender.\n@param {object} partialState Next partial state to be merged with state.\n@internal\n  ","info":{"type":"multiline","apidoc":true},"code":"  enqueueSetState: function (publicInstance, partialState) {"},"15757":{"begin":15757,"end":15757,"codeStart":15758,"content":"TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n","info":{"type":"singleline"},"code":"    if (doc) {"},"17367":{"begin":17367,"end":17371,"codeStart":17372,"content":"Magic theory: IE8 supposedly differentiates between added and updated\nnodes when processing innerHTML, innerHTML on updated nodes suffers\nfrom worse whitespace behavior. Re-adding a node like this triggers\nthe initial and more favorable whitespace behavior.\nTODO: What to do on a detached node?\n","info":{"type":"singleline"},"code":"      if (node.parentNode) {"},"17514":{"begin":17514,"end":17517,"codeStart":17519,"content":"TODO: Test that a single child and an array with one item have the same key\npattern.\n","info":{"type":"multiline","apidoc":true},"code":"var userProvidedKeyEscaperLookup = {"},"17719":{"begin":17719,"end":17721,"codeStart":17722,"content":"https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point\nTODO: Distinguish by namespace here -- for <title>, including it here\nerrs on the side of fewer warnings\n","info":{"type":"singleline"},"code":"  'foreignObject', 'desc', 'title'];"}},"./eslint-rules/__tests__/warning-and-invariant-args-test.js":{},"./eslint-rules/index.js":{},"./eslint-rules/warning-and-invariant-args.js":{},"./examples/basic/index.html":{},"./examples/basic-click-counter/index.html":{},"./examples/basic-commonjs/index.html":{},"./examples/basic-commonjs/index.js":{},"./examples/basic-jsx/index.html":{},"./examples/basic-jsx-external/example.js":{},"./examples/basic-jsx-external/index.html":{},"./examples/basic-jsx-harmony/index.html":{},"./examples/basic-jsx-precompile/example.js":{},"./examples/basic-jsx-precompile/index.html":{},"./examples/jquery-bootstrap/css/example.css":{},"./examples/jquery-bootstrap/index.html":{},"./examples/jquery-bootstrap/js/app.js":{},"./examples/jquery-mobile/index.html":{},"./examples/jquery-mobile/js/app.js":{},"./examples/quadratic/example.js":{},"./examples/quadratic/index.html":{},"./examples/shared/css/base.css":{},"./examples/transitions/index.html":{},"./examples/transitions/transition.css":{},"./examples/webcomponents/index.html":{},"./grunt/config/browserify.js":{"25":{"begin":25,"end":25,"codeStart":26,"content":"TODO: move this out to another build step maybe.\n","info":{"type":"singleline"},"code":"function bannerify(src) {"}},"./grunt/config/compare_size.js":{},"./grunt/config/compress.js":{},"./grunt/config/npm.js":{},"./grunt/tasks/browserify.js":{},"./grunt/tasks/eslint.js":{},"./grunt/tasks/jest.js":{},"./grunt/tasks/npm-react-addons.js":{},"./grunt/tasks/npm-react-dom.js":{},"./grunt/tasks/npm-react.js":{},"./grunt/tasks/npm.js":{},"./grunt/tasks/react-dom.js":{},"./grunt/tasks/release.js":{},"./grunt/tasks/version-check.js":{},"./gulpfile.js":{},"./mocks/ReactElementTestChild.js":{},"./mocks/ReactMockedComponentTestComponent.js":{},"./packages/jsx_orphaned_brackets_transformer/run.js":{},"./packages/jsx_orphaned_brackets_transformer/transforms/react.js":{},"./packages/react/lib/ReactDOM.native.js":{"5":{"begin":5,"end":8,"codeStart":10,"content":"TODO: In React Native, ReactTestUtils depends on ./ReactDOM (for\nrenderIntoDocument, which should never be called) and Relay depends on\nreact-dom (for batching). Once those are fixed, nothing in RN should import\nthis module and this file can go away.\n","info":{"type":"singleline"},"code":"module.exports = {"}},"./packages/react/react.js":{},"./packages/react-dom/index.js":{},"./packages/react-dom/server.js":{},"./packages/react-linked-input/LinkedInput.js":{},"./packages/react-linked-input/__test__/LinkedInput-test.js":{},"./scripts/babel/transform-object-assign-require.js":{},"./scripts/bench/analyze.py":{},"./scripts/bench/bench-createclass.js":{},"./scripts/bench/bench-pe-es5.js":{},"./scripts/bench/bench-pe.js":{},"./scripts/bench/extract-component.js":{},"./scripts/bench/measure.py":{},"./scripts/jest/environment.js":{},"./scripts/jest/jest.d.ts":{},"./scripts/jest/preprocessor.js":{"27":{"begin":27,"end":27,"codeStart":28,"content":"TODO: make sure this stays in sync with gulpfile\n","info":{"type":"singleline"},"code":"var babelOptions = {"}},"./scripts/jest/test-framework-setup.js":{"25":{"begin":25,"end":26,"codeStart":28,"content":"TODO: Catch test cases that call spyOn() but don't inspect the mock\nproperly.\n","info":{"type":"singleline"},"code":"  if (console.error !== newError && !console.error.isSpy) {"}},"./scripts/jest/ts-preprocessor.js":{},"./scripts/perf-counters/index.js":{},"./scripts/perf-counters/src/hardware-counter.cpp":{},"./scripts/perf-counters/src/hardware-counter.h":{},"./scripts/perf-counters/src/jsc-perf.cpp":{"89":{"begin":89,"end":89,"codeStart":90,"content":"TODO: Allow customizing recorded events\n","info":{"type":"singleline"},"code":"  bool enable = true;"}},"./scripts/perf-counters/src/perf-counters.cpp":{"19":{"begin":19,"end":19,"codeStart":20,"content":"TODO: Allow customizing recorded events\n","info":{"type":"singleline"},"code":"  bool enable = true;"}},"./scripts/perf-counters/src/portability.h":{"36":{"begin":36,"end":36,"codeStart":37,"content":"TODO: does clang define __GNUC__ ?\n","info":{"type":"singleline"},"code":"#ifndef __GNUC__"},"135":{"begin":135,"end":136,"codeStart":137,"content":"TODO: FIXME! Without this implemented properly, the JIT\nwill fail \"pretty spectacularly\".\n","info":{"type":"singleline"},"code":"# define DECLARE_FRAME_POINTER(fp) \\"}},"./scripts/perf-counters/src/thread-local.cpp":{},"./scripts/perf-counters/src/thread-local.h":{},"./src/ReactVersion.js":{},"./src/addons/ReactComponentWithPureRenderMixin.js":{},"./src/addons/ReactFragment.js":{},"./src/addons/ReactWithAddons.js":{},"./src/addons/__tests__/ReactComponentWithPureRenderMixin-test.js":{},"./src/addons/__tests__/ReactFragment-test.js":{},"./src/addons/__tests__/renderSubtreeIntoContainer-test.js":{},"./src/addons/__tests__/update-test.js":{},"./src/addons/link/LinkedStateMixin.js":{},"./src/addons/link/ReactLink.js":{},"./src/addons/link/__tests__/LinkedStateMixin-test.js":{},"./src/addons/link/__tests__/ReactLinkPropTypes-test.js":{},"./src/addons/renderSubtreeIntoContainer.js":{},"./src/addons/shallowCompare.js":{},"./src/addons/transitions/ReactCSSTransitionGroup.js":{},"./src/addons/transitions/ReactCSSTransitionGroupChild.js":{},"./src/addons/transitions/ReactTransitionChildMapping.js":{},"./src/addons/transitions/ReactTransitionEvents.js":{},"./src/addons/transitions/ReactTransitionGroup.js":{"203":{"begin":203,"end":204,"codeStart":205,"content":"TODO: we could get rid of the need for the wrapper node\nby cloning a single child\n","info":{"type":"singleline"},"code":"    var childrenToRender = [];"}},"./src/addons/transitions/__tests__/ReactCSSTransitionGroup-test.js":{},"./src/addons/transitions/__tests__/ReactTransitionChildMapping-test.js":{},"./src/addons/transitions/__tests__/ReactTransitionGroup-test.js":{},"./src/addons/update.js":{},"./src/core/__tests__/ReactErrorBoundaries-test.js":{},"./src/isomorphic/React.js":{},"./src/isomorphic/ReactDebugInstanceMap.js":{},"./src/isomorphic/ReactDebugTool.js":{},"./src/isomorphic/ReactInstrumentation.js":{},"./src/isomorphic/__tests__/ReactDebugInstanceMap-test.js":{},"./src/isomorphic/children/ReactChildren.js":{},"./src/isomorphic/children/__tests__/ReactChildren-test.js":{"98":{"begin":98,"end":98,"codeStart":99,"content":"TODO: Use an object to test, after non-object fragments has fully landed.\n","info":{"type":"singleline"},"code":"    var scopeTester = 'scope tester';"}},"./src/isomorphic/children/__tests__/onlyChild-test.js":{},"./src/isomorphic/children/__tests__/sliceChildren-test.js":{},"./src/isomorphic/children/onlyChild.js":{},"./src/isomorphic/children/sliceChildren.js":{},"./src/isomorphic/classic/__tests__/ReactContextValidator-test.js":{"36":{"begin":36,"end":37,"codeStart":39,"content":"TODO: This behavior creates a runtime dependency on propTypes. We should\nensure that this is not required for ES6 classes with Flow.\n","info":{"type":"singleline"},"code":"  it('should filter out context not in contextTypes', function() {"}},"./src/isomorphic/classic/class/ReactClass.js":{"705":{"begin":705,"end":708,"codeStart":709,"content":"TODO: This will be deprecated because state should always keep a consistent\ntype signature and the only use case for this, is to avoid that.\n  ","info":{"type":"multiline","apidoc":true},"code":"  replaceState: function(newState, callback) {"}},"./src/isomorphic/classic/class/__tests__/ReactBind-test.js":{"18":{"begin":18,"end":18,"codeStart":19,"content":"TODO: Test render and all stock methods.\n","info":{"type":"singleline"},"code":"describe('autobinding', function() {"}},"./src/isomorphic/classic/class/__tests__/ReactBindOptout-test.js":{"18":{"begin":18,"end":18,"codeStart":19,"content":"TODO: Test render and all stock methods.\n","info":{"type":"singleline"},"code":"describe('autobind optout', function() {"}},"./src/isomorphic/classic/class/__tests__/ReactClass-test.js":{"190":{"begin":190,"end":190,"codeStart":192,"content":"TODO: Consider actually moving these to statics or drop this unit test.\n","info":{"type":"singleline"},"code":"  xit('should warn when using deprecated non-static spec keys', function() {"}},"./src/isomorphic/classic/class/__tests__/ReactClassMixin-test.js":{},"./src/isomorphic/classic/element/ReactCurrentOwner.js":{},"./src/isomorphic/classic/element/ReactDOMFactories.js":{},"./src/isomorphic/classic/element/ReactElement.js":{"235":{"begin":235,"end":239,"codeStart":240,"content":"Expose the type on the factory and the prototype so that it can be\neasily accessed on elements. E.g. `<Foo />.type === Foo`.\nThis should not be named `constructor` since this may not be the function\nthat created the element, and it may not even be a constructor.\nLegacy hook TODO: Warn if this is accessed\n","info":{"type":"singleline"},"code":"  factory.type = type;"}},"./src/isomorphic/classic/element/ReactElementValidator.js":{"271":{"begin":271,"end":272,"codeStart":273,"content":"The result can be nullish if a mock or a custom function is used.\nTODO: Drop this when these are no longer allowed as the type argument.\n","info":{"type":"singleline"},"code":"    if (element == null) {"},"298":{"begin":298,"end":298,"codeStart":299,"content":"Legacy hook TODO: Warn if this is accessed\n","info":{"type":"singleline"},"code":"    validatedFactory.type = type;"}},"./src/isomorphic/classic/element/__tests__/ReactElement-test.js":{"287":{"begin":287,"end":289,"codeStart":290,"content":"TODO: This test was added to cover a special case where we proxied\nmethods. However, we don't do that any more so this test can probably\nbe removed. Leaving it in classic as a safety precaution.\n","info":{"type":"singleline"},"code":"    var Component = React.createClass({"}},"./src/isomorphic/classic/element/__tests__/ReactElementClone-test.js":{},"./src/isomorphic/classic/element/__tests__/ReactElementValidator-test.js":{"220":{"begin":220,"end":221,"codeStart":223,"content":"TODO: These warnings currently come from the composite component, but\nthey should be moved into the ReactElementValidator.\n","info":{"type":"singleline"},"code":"  it('should give context for PropType errors in nested components.', () => {"}},"./src/isomorphic/classic/types/ReactPropTypeLocationNames.js":{},"./src/isomorphic/classic/types/ReactPropTypeLocations.js":{},"./src/isomorphic/classic/types/ReactPropTypes.js":{},"./src/isomorphic/classic/types/__tests__/ReactPropTypes-test.js":{},"./src/isomorphic/deprecated/OrderedMap.js":{"45":{"begin":45,"end":69,"codeStart":70,"content":"Utility class for mappings with ordering. This class is to be used in an\nimmutable manner. A `OrderedMap` is very much like the native JavaScript\nobject, where keys map to values via the `get()` function. Also, like the\nnative JavaScript object, there is an ordering associated with the mapping.\nThis class is helpful because it eliminates many of the pitfalls that come\nwith the native JavaScript ordered mappings. Specifically, there are\ninconsistencies with numeric keys in some JavaScript implementations\n(enumeration ordering). This class protects against those pitfalls and\nprovides functional utilities for dealing with these `OrderedMap`s.\n\n- TODO:\n- orderedMergeExclusive: Merges mutually exclusive `OrderedMap`s.\n- mapReverse().\n\n@class {OrderedMap}\n@constructor {OrderedMap}\n@param {Object} normalizedObj Object that is known to be a defensive copy of\ncaller supplied data. We require a defensive copy to guard against callers\nmutating.  It is also assumed that the keys of `normalizedObj` have been\nnormalized and do not contain any numeric-appearing strings.\n@param {number} computedLength The precomputed length of `_normalizedObj`\nkeys.\n@private\n","info":{"type":"multiline","apidoc":true},"code":"function OrderedMapImpl(normalizedObj, computedLength) {"},"150":{"begin":150,"end":159,"codeStart":160,"content":"Methods for `OrderedMap` instances.\n\n@lends OrderedMap.prototype\nTODO: Make this data structure lazy, unify with LazyArray.\nTODO: Unify this with ImmutableObject - it is to be used immutably.\nTODO: If so, consider providing `fromObject` API.\nTODO: Create faster implementation of merging/mapping from original Array,\nwithout having to first create an object - simply for the sake of merging.\n","info":{"type":"multiline","apidoc":true},"code":"var OrderedMapMethods = {"},"444":{"begin":444,"end":445,"codeStart":446,"content":"TODO: Entertain computing this at construction time in some less\nperformance critical paths.\n","info":{"type":"singleline"},"code":"    var computedPositions = this._computedPositions;"}},"./src/isomorphic/deprecated/ReactPropTransferer.js":{},"./src/isomorphic/devtools/ReactInvalidSetStateWarningDevTool.js":{},"./src/isomorphic/modern/class/React.d.ts":{},"./src/isomorphic/modern/class/ReactComponent.js":{},"./src/isomorphic/modern/class/ReactDOM.d.ts":{},"./src/isomorphic/modern/class/ReactNoopUpdateQueue.js":{"88":{"begin":88,"end":97,"codeStart":98,"content":"Sets a subset of the state. This only exists because _pendingState is\ninternal. This provides a merging strategy that is not available to deep\nproperties which is confusing. TODO: Expose pendingState or don't use it\nduring the merge.\n\n@param {ReactClass} publicInstance The instance that should rerender.\n@param {object} partialState Next partial state to be merged with state.\n@internal\n  ","info":{"type":"multiline","apidoc":true},"code":"  enqueueSetState: function(publicInstance, partialState) {"}},"./src/isomorphic/modern/class/__tests__/ReactClassEquivalence-test.js":{},"./src/isomorphic/modern/class/__tests__/ReactCoffeeScriptClass-test.coffee":{},"./src/isomorphic/modern/class/__tests__/ReactES6Class-test.js":{},"./src/isomorphic/modern/class/__tests__/ReactTypeScriptClass-test.ts":{"38":{"begin":38,"end":41,"codeStart":43,"content":"Classes need to be declared at the top level scope, so we declare all the\nclasses that will be used by the tests below, instead of inlining them.\nTODO: Consider redesigning this using modules so that we can use non-unique\nnames of classes and bundle them with the test code.\n","info":{"type":"singleline"},"code":"// it preserves the name of the class for use in error messages"}},"./src/isomorphic/modern/element/__tests__/ReactJSXElement-test.js":{},"./src/isomorphic/modern/element/__tests__/ReactJSXElementValidator-test.js":{"14":{"begin":14,"end":15,"codeStart":17,"content":"TODO: All these warnings should become static errors using Flow instead\nof dynamic errors when using JSX with Flow.\n","info":{"type":"singleline"},"code":"var React;"},"176":{"begin":176,"end":177,"codeStart":179,"content":"TODO: These warnings currently come from the composite component, but\nthey should be moved into the ReactElementValidator.\n","info":{"type":"singleline"},"code":"  it('should give context for PropType errors in nested components.', () => {"}},"./src/isomorphic/modern/types/__tests__/ReactFlowPropTypes-test.js":{"16":{"begin":16,"end":16,"codeStart":18,"content":"TODO: Test Flow integration and ensure that prop types works.\n","info":{"type":"singleline"},"code":"});"}},"./src/isomorphic/modern/types/__tests__/ReactTypeScriptPropTypes-test.js":{"16":{"begin":16,"end":16,"codeStart":18,"content":"TODO: Test TypeScript integration and ensure that prop types works.\n","info":{"type":"singleline"},"code":"});"}},"./src/renderers/dom/ReactDOM.js":{},"./src/renderers/dom/ReactDOMServer.js":{},"./src/renderers/dom/__tests__/ReactDOMProduction-test.js":{},"./src/renderers/dom/client/ReactBrowserEventEmitter.js":{},"./src/renderers/dom/client/ReactDOMComponentTree.js":{},"./src/renderers/dom/client/ReactDOMIDOperations.js":{},"./src/renderers/dom/client/ReactDOMSelection.js":{},"./src/renderers/dom/client/ReactDOMTreeTraversal.js":{},"./src/renderers/dom/client/ReactEventListener.js":{"29":{"begin":29,"end":31,"codeStart":32,"content":"TODO: It may be a good idea to cache this to prevent unnecessary DOM\ntraversal, but caching is difficult to do correctly without using a\nmutation observer to listen for all DOM changes.\n","info":{"type":"singleline"},"code":"  while (inst._nativeParent) {"}},"./src/renderers/dom/client/ReactInputSelection.js":{},"./src/renderers/dom/client/ReactMount.js":{},"./src/renderers/dom/client/ReactReconcileTransaction.js":{"120":{"begin":120,"end":126,"codeStart":127,"content":"@see Transaction\n@abstract\n@final\n@return {array<object>} List of operation wrap procedures.\n  TODO: convert to array<TransactionWrapper>\n  ","info":{"type":"multiline","apidoc":true},"code":"  getTransactionWrappers: function() {"}},"./src/renderers/dom/client/__tests__/ReactBrowserEventEmitter-test.js":{},"./src/renderers/dom/client/__tests__/ReactDOM-test.js":{"20":{"begin":20,"end":21,"codeStart":22,"content":"TODO: uncomment this test once we can run in phantom, which\nsupports real submit events.\n","info":{"type":"singleline"},"code":"  /*"}},"./src/renderers/dom/client/__tests__/ReactDOMComponentTree-test.js":{},"./src/renderers/dom/client/__tests__/ReactDOMIDOperations-test.js":{},"./src/renderers/dom/client/__tests__/ReactDOMSVG-test.js":{},"./src/renderers/dom/client/__tests__/ReactDOMTreeTraversal-test.js":{},"./src/renderers/dom/client/__tests__/ReactEventIndependence-test.js":{},"./src/renderers/dom/client/__tests__/ReactEventListener-test.js":{},"./src/renderers/dom/client/__tests__/ReactMount-test.js":{},"./src/renderers/dom/client/__tests__/ReactMountDestruction-test.js":{},"./src/renderers/dom/client/__tests__/ReactRenderDocument-test.js":{},"./src/renderers/dom/client/__tests__/findDOMNode-test.js":{},"./src/renderers/dom/client/__tests__/validateDOMNesting-test.js":{},"./src/renderers/dom/client/eventPlugins/BeforeInputEventPlugin.js":{},"./src/renderers/dom/client/eventPlugins/ChangeEventPlugin.js":{},"./src/renderers/dom/client/eventPlugins/DefaultEventPluginOrder.js":{},"./src/renderers/dom/client/eventPlugins/EnterLeaveEventPlugin.js":{"72":{"begin":72,"end":72,"codeStart":73,"content":"TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n","info":{"type":"singleline"},"code":"      var doc = nativeEventTarget.ownerDocument;"}},"./src/renderers/dom/client/eventPlugins/FallbackCompositionState.js":{},"./src/renderers/dom/client/eventPlugins/SelectEventPlugin.js":{},"./src/renderers/dom/client/eventPlugins/SimpleEventPlugin.js":{},"./src/renderers/dom/client/eventPlugins/TapEventPlugin.js":{},"./src/renderers/dom/client/eventPlugins/__tests__/ChangeEventPlugin-test.js":{},"./src/renderers/dom/client/eventPlugins/__tests__/EnterLeaveEventPlugin-test.js":{},"./src/renderers/dom/client/eventPlugins/__tests__/FallbackCompositionState-test.js":{},"./src/renderers/dom/client/eventPlugins/__tests__/SelectEventPlugin-test.js":{},"./src/renderers/dom/client/findDOMNode.js":{},"./src/renderers/dom/client/syntheticEvents/SyntheticAnimationEvent.js":{},"./src/renderers/dom/client/syntheticEvents/SyntheticClipboardEvent.js":{},"./src/renderers/dom/client/syntheticEvents/SyntheticCompositionEvent.js":{},"./src/renderers/dom/client/syntheticEvents/SyntheticDragEvent.js":{},"./src/renderers/dom/client/syntheticEvents/SyntheticEvent.js":{},"./src/renderers/dom/client/syntheticEvents/SyntheticFocusEvent.js":{},"./src/renderers/dom/client/syntheticEvents/SyntheticInputEvent.js":{},"./src/renderers/dom/client/syntheticEvents/SyntheticKeyboardEvent.js":{},"./src/renderers/dom/client/syntheticEvents/SyntheticMouseEvent.js":{},"./src/renderers/dom/client/syntheticEvents/SyntheticTouchEvent.js":{},"./src/renderers/dom/client/syntheticEvents/SyntheticTransitionEvent.js":{},"./src/renderers/dom/client/syntheticEvents/SyntheticUIEvent.js":{"35":{"begin":35,"end":35,"codeStart":36,"content":"TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n","info":{"type":"singleline"},"code":"    if (doc) {"}},"./src/renderers/dom/client/syntheticEvents/SyntheticWheelEvent.js":{},"./src/renderers/dom/client/syntheticEvents/__tests__/SyntheticClipboardEvent-test.js":{},"./src/renderers/dom/client/syntheticEvents/__tests__/SyntheticEvent-test.js":{"147":{"begin":147,"end":149,"codeStart":150,"content":"TODO: reenable this test. We are currently silencing these warnings when\nusing TestUtils.Simulate to avoid spurious warnings that result from the\nway we simulate events.\n","info":{"type":"singleline"},"code":"  xit('should properly log warnings when events simulated with rendered components', function() {"}},"./src/renderers/dom/client/syntheticEvents/__tests__/SyntheticKeyboardEvent-test.js":{},"./src/renderers/dom/client/syntheticEvents/__tests__/SyntheticWheelEvent-test.js":{},"./src/renderers/dom/client/utils/DOMChildrenOperations.js":{},"./src/renderers/dom/client/utils/DOMLazyTree.js":{},"./src/renderers/dom/client/utils/ViewportMetrics.js":{},"./src/renderers/dom/client/utils/__tests__/getEventCharCode-test.js":{},"./src/renderers/dom/client/utils/__tests__/getEventKey-test.js":{},"./src/renderers/dom/client/utils/__tests__/getNodeForCharacterOffset-test.js":{},"./src/renderers/dom/client/utils/createMicrosoftUnsafeLocalFunction.js":{},"./src/renderers/dom/client/utils/getEventCharCode.js":{},"./src/renderers/dom/client/utils/getEventKey.js":{},"./src/renderers/dom/client/utils/getEventModifierState.js":{},"./src/renderers/dom/client/utils/getEventTarget.js":{},"./src/renderers/dom/client/utils/getNodeForCharacterOffset.js":{},"./src/renderers/dom/client/utils/getTextContentAccessor.js":{},"./src/renderers/dom/client/utils/getVendorPrefixedEventName.js":{},"./src/renderers/dom/client/utils/isEventSupported.js":{},"./src/renderers/dom/client/utils/setInnerHTML.js":{"46":{"begin":46,"end":50,"codeStart":51,"content":"Magic theory: IE8 supposedly differentiates between added and updated\nnodes when processing innerHTML, innerHTML on updated nodes suffers\nfrom worse whitespace behavior. Re-adding a node like this triggers\nthe initial and more favorable whitespace behavior.\nTODO: What to do on a detached node?\n","info":{"type":"singleline"},"code":"      if (node.parentNode) {"}},"./src/renderers/dom/client/utils/setTextContent.js":{},"./src/renderers/dom/client/validateDOMNesting.js":{"51":{"begin":51,"end":53,"codeStart":54,"content":"https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point\nTODO: Distinguish by namespace here -- for <title>, including it here\nerrs on the side of fewer warnings\n","info":{"type":"singleline"},"code":"    'foreignObject', 'desc', 'title',"}},"./src/renderers/dom/client/wrappers/AutoFocusUtils.js":{},"./src/renderers/dom/client/wrappers/LinkedValueUtils.js":{},"./src/renderers/dom/client/wrappers/ReactDOMButton.js":{},"./src/renderers/dom/client/wrappers/ReactDOMInput.js":{"206":{"begin":206,"end":206,"codeStart":207,"content":"TODO: Shouldn't this be getChecked(props)?\n","info":{"type":"singleline"},"code":"    var checked = props.checked;"}},"./src/renderers/dom/client/wrappers/ReactDOMOption.js":{"25":{"begin":25,"end":25,"codeStart":26,"content":"TODO (yungsters): Remove support for `selected` in <option>.\n","info":{"type":"singleline"},"code":"    if (__DEV__) {"}},"./src/renderers/dom/client/wrappers/ReactDOMSelect.js":{},"./src/renderers/dom/client/wrappers/ReactDOMTextarea.js":{"113":{"begin":113,"end":113,"codeStart":114,"content":"TODO (yungsters): Remove support for children content in <textarea>.\n","info":{"type":"singleline"},"code":"    var children = props.children;"}},"./src/renderers/dom/client/wrappers/__tests__/ReactDOMButton-test.js":{},"./src/renderers/dom/client/wrappers/__tests__/ReactDOMIframe-test.js":{},"./src/renderers/dom/client/wrappers/__tests__/ReactDOMInput-test.js":{},"./src/renderers/dom/client/wrappers/__tests__/ReactDOMOption-test.js":{},"./src/renderers/dom/client/wrappers/__tests__/ReactDOMSelect-test.js":{},"./src/renderers/dom/client/wrappers/__tests__/ReactDOMTextarea-test.js":{},"./src/renderers/dom/server/ReactMarkupChecksum.js":{},"./src/renderers/dom/server/ReactServerBatchingStrategy.js":{},"./src/renderers/dom/server/ReactServerRendering.js":{},"./src/renderers/dom/server/ReactServerRenderingTransaction.js":{},"./src/renderers/dom/server/__tests__/ReactServerRendering-test.js":{},"./src/renderers/dom/shared/CSSProperty.js":{},"./src/renderers/dom/shared/CSSPropertyOperations.js":{},"./src/renderers/dom/shared/DOMNamespaces.js":{},"./src/renderers/dom/shared/DOMProperty.js":{},"./src/renderers/dom/shared/DOMPropertyOperations.js":{},"./src/renderers/dom/shared/Danger.js":{},"./src/renderers/dom/shared/HTMLDOMPropertyConfig.js":{},"./src/renderers/dom/shared/ReactComponentBrowserEnvironment.js":{"18":{"begin":18,"end":22,"codeStart":23,"content":"Abstracts away all functionality of the reconciler that requires knowledge of\nthe browser context. TODO: These callers should be refactored to avoid the\nneed for this injection.\n","info":{"type":"multiline","apidoc":true},"code":"var ReactComponentBrowserEnvironment = {"}},"./src/renderers/dom/shared/ReactDOMComponent.js":{"707":{"begin":707,"end":707,"codeStart":708,"content":"TODO: Validate that text is allowed as a child of this node\n","info":{"type":"singleline"},"code":"        ret = escapeTextContentForBrowser(contentToUse);"},"747":{"begin":747,"end":747,"codeStart":748,"content":"TODO: Validate that text is allowed as a child of this node\n","info":{"type":"singleline"},"code":"        DOMLazyTree.queueText(lazyTree, contentToUse);"},"831":{"begin":831,"end":846,"codeStart":847,"content":"Reconciles the properties by detecting differences in property values and\nupdating the DOM as necessary. This function is probably the single most\ncritical path for performance optimization.\n\nTODO: Benchmark whether checking for changed values in memory actually\n      improves performance (especially statically positioned elements).\nTODO: Benchmark the effects of putting this at the top since 99% of props\n      do not change for a given reconciliation.\nTODO: Benchmark areas that can be improved with caching.\n\n@private\n@param {object} lastProps\n@param {object} nextProps\n@param {?DOMElement} node\n  ","info":{"type":"multiline","apidoc":true},"code":"  _updateDOMProperties: function(lastProps, nextProps, transaction) {"}},"./src/renderers/dom/shared/ReactDOMComponentFlags.js":{},"./src/renderers/dom/shared/ReactDOMContainerInfo.js":{},"./src/renderers/dom/shared/ReactDOMDebugTool.js":{},"./src/renderers/dom/shared/ReactDOMEmptyComponent.js":{},"./src/renderers/dom/shared/ReactDOMFeatureFlags.js":{},"./src/renderers/dom/shared/ReactDOMInstrumentation.js":{},"./src/renderers/dom/shared/ReactDOMTextComponent.js":{"23":{"begin":23,"end":37,"codeStart":38,"content":"Text nodes violate a couple assumptions that React makes about components:\n\n - When mounting text into the DOM, adjacent text nodes are merged.\n - Text nodes cannot be assigned a React root ID.\n\nThis component is used to wrap strings between comment nodes so that they\ncan undergo the same reconciliation that is applied to elements.\n\nTODO: Investigate representing React components in the DOM with text nodes.\n\n@class ReactDOMTextComponent\n@extends ReactComponent\n@internal\n","info":{"type":"multiline","apidoc":true},"code":"var ReactDOMTextComponent = function(text) {"},"39":{"begin":39,"end":39,"codeStart":40,"content":"TODO: This is really a ReactText (ReactNode), not a ReactElement\n","info":{"type":"singleline"},"code":"  this._currentElement = text;"},"133":{"begin":133,"end":135,"codeStart":136,"content":"TODO: Save this as pending props and use performUpdateIfNecessary\nand/or updateComponent to do the actual update for consistency with\nother component types?\n","info":{"type":"singleline"},"code":"        this._stringText = nextStringText;"}},"./src/renderers/dom/shared/ReactDefaultInjection.js":{"39":{"begin":39,"end":41,"codeStart":42,"content":"TODO: This is currently true because these injections are shared between\nthe client and the server package. They should be built independently\nand not share any injection state. Then this problem will be solved.\n","info":{"type":"singleline"},"code":"    return;"}},"./src/renderers/dom/shared/ReactInjection.js":{},"./src/renderers/dom/shared/SVGDOMPropertyConfig.js":{},"./src/renderers/dom/shared/__tests__/CSSProperty-test.js":{},"./src/renderers/dom/shared/__tests__/CSSPropertyOperations-test.js":{},"./src/renderers/dom/shared/__tests__/DOMPropertyOperations-test.js":{},"./src/renderers/dom/shared/__tests__/Danger-test.js":{},"./src/renderers/dom/shared/__tests__/ReactDOMComponent-test.js":{"67":{"begin":67,"end":67,"codeStart":68,"content":"TODO: (poshannessy) deprecate this pattern.\n","info":{"type":"singleline"},"code":"    it('should update styles when mutating style object', function() {"}},"./src/renderers/dom/shared/__tests__/ReactDOMTextComponent-test.js":{},"./src/renderers/dom/shared/__tests__/escapeTextContentForBrowser-test.js":{},"./src/renderers/dom/shared/__tests__/quoteAttributeValueForBrowser-test.js":{},"./src/renderers/dom/shared/dangerousStyleValue.js":{},"./src/renderers/dom/shared/devtools/ReactDOMUnknownPropertyDevtool.js":{},"./src/renderers/dom/shared/escapeTextContentForBrowser.js":{},"./src/renderers/dom/shared/quoteAttributeValueForBrowser.js":{},"./src/renderers/shared/event/EventConstants.js":{},"./src/renderers/shared/event/EventPluginHub.js":{"147":{"begin":147,"end":147,"codeStart":148,"content":"TODO: This should never be null -- when is it?\n","info":{"type":"singleline"},"code":"    if (bankForRegistrationName) {"}},"./src/renderers/shared/event/EventPluginRegistry.js":{},"./src/renderers/shared/event/EventPluginUtils.js":{},"./src/renderers/shared/event/EventPropagators.js":{},"./src/renderers/shared/event/__tests__/EventPluginHub-test.js":{},"./src/renderers/shared/event/__tests__/EventPluginRegistry-test.js":{},"./src/renderers/shared/event/eventPlugins/ResponderEventPlugin.js":{"73":{"begin":73,"end":81,"codeStart":82,"content":"On a `scroll`, is it desired that this element become the responder? This\nis usually not needed, but should be used to retroactively infer that a\n`touchStart` had occurred during momentum scroll. During a momentum scroll,\na touch start will be immediately followed by a scroll event if the view is\ncurrently scrolling.\n\nTODO: This shouldn't bubble.\n  ","info":{"type":"multiline","apidoc":true},"code":"  scrollShouldSetResponder: {"},"89":{"begin":89,"end":95,"codeStart":96,"content":"On text selection change, should this element become the responder? This\nis needed for text inputs or other views with native selection, so the\nJS view can claim the responder.\n\nTODO: This shouldn't bubble.\n  ","info":{"type":"multiline","apidoc":true},"code":"  selectionChangeShouldSetResponder: {"},"129":{"begin":129,"end":178,"codeStart":180,"content":"Responder System:\n----------------\n\n- A global, solitary \"interaction lock\" on a view.\n- If a node becomes the responder, it should convey visual feedback\n  immediately to indicate so, either by highlighting or moving accordingly.\n- To be the responder means, that touches are exclusively important to that\n  responder view, and no other view.\n- While touches are still occurring, the responder lock can be transferred to\n  a new view, but only to increasingly \"higher\" views (meaning ancestors of\n  the current responder).\n\nResponder being granted:\n------------------------\n\n- Touch starts, moves, and scrolls can cause an ID to become the responder.\n- We capture/bubble `startShouldSetResponder`/`moveShouldSetResponder` to\n  the \"appropriate place\".\n- If nothing is currently the responder, the \"appropriate place\" is the\n  initiating event's `targetID`.\n- If something *is* already the responder, the \"appropriate place\" is the\n  first common ancestor of the event target and the current `responderInst`.\n- Some negotiation happens: See the timing diagram below.\n- Scrolled views automatically become responder. The reasoning is that a\n  platform scroll view that isn't built on top of the responder system has\n  began scrolling, and the active responder must now be notified that the\n  interaction is no longer locked to it - the system has taken over.\n\n- Responder being released:\n  As soon as no more touches that *started* inside of descendants of the\n  *current* responderInst, an `onResponderRelease` event is dispatched to the\n  current responder, and the responder lock is released.\n\nTODO:\n- on \"end\", a callback hook for `onResponderEndShouldRemainResponder` that\n  determines if the responder lock should remain.\n- If a view shouldn't \"remain\" the responder, any active touches should by\n  default be considered \"dead\" and do not influence future negotiations or\n  bubble paths. It should be as if those touches do not exist.\n-- For multitouch: Usually a translate-z will choose to \"remain\" responder\n after one out of many touches ended. For translate-y, usually the view\n doesn't wish to \"remain\" responder after one of many touches end.\n- Consider building this on top of a `stopPropagation` model similar to\n  `W3C` events.\n- Ensure that `onResponderTerminate` is called on touch cancels, whether or\n  not `onResponderTerminationRequest` returns `true` or `false`.\n\n","info":{"type":"multiline","apidoc":true},"code":"/*                                             Negotiation Performed"},"334":{"begin":334,"end":334,"codeStart":335,"content":"TODO: stop one short of the current responder.\n","info":{"type":"singleline"},"code":"  var bubbleShouldSetFrom = !responderInst ?"}},"./src/renderers/shared/event/eventPlugins/ResponderSyntheticEvent.js":{},"./src/renderers/shared/event/eventPlugins/ResponderTouchHistoryStore.js":{"50":{"begin":50,"end":52,"codeStart":53,"content":"The legacy internal implementation provides \"timeStamp\", which has been\nrenamed to \"timestamp\". Let both work for now while we iron it out\nTODO (evv): rename timeStamp to timestamp in internal code\n","info":{"type":"singleline"},"code":"  return touch.timeStamp || touch.timestamp;"},"56":{"begin":56,"end":60,"codeStart":61,"content":"TODO: Instead of making gestures recompute filtered velocity, we could\ninclude a built in velocity computation that can be reused globally.\n@param {Touch} touch Native touch object.\n","info":{"type":"multiline","apidoc":true},"code":"var initializeTouchData = function(touch) {"}},"./src/renderers/shared/event/eventPlugins/__tests__/ResponderEventPlugin-test.js":{},"./src/renderers/shared/reconciler/ReactChildReconciler.js":{"77":{"begin":77,"end":81,"codeStart":82,"content":"We currently don't have a way to track moves here but if we use iterators\ninstead of for..in we can zip the iterators and check if an item has\nmoved.\nTODO: If nothing has changed, return the prevChildren object so that we\ncan quickly bailout if nothing has changed.\n","info":{"type":"singleline"},"code":"    if (!nextChildren && !prevChildren) {"}},"./src/renderers/shared/reconciler/ReactComponentEnvironment.js":{},"./src/renderers/shared/reconciler/ReactCompositeComponent.js":{"440":{"begin":440,"end":444,"codeStart":445,"content":"Some existing components rely on inst.props even after they've been\ndestroyed (in event handlers).\nTODO: inst.props = null;\nTODO: inst.state = null;\nTODO: inst.context = null;\n","info":{"type":"singleline"},"code":"  },"},"565":{"begin":565,"end":566,"codeStart":567,"content":"TODO: Stop validating prop types here and only use the element\nvalidation.\n","info":{"type":"singleline"},"code":"    var componentName = this.getName();"},"907":{"begin":907,"end":907,"codeStart":908,"content":"TODO: An `isValidNode` function would probably be more appropriate\n","info":{"type":"singleline"},"code":"      renderedComponent === null || renderedComponent === false ||"}},"./src/renderers/shared/reconciler/ReactDefaultBatchingStrategy.js":{},"./src/renderers/shared/reconciler/ReactEmptyComponent.js":{},"./src/renderers/shared/reconciler/ReactEventEmitterMixin.js":{},"./src/renderers/shared/reconciler/ReactInstanceHandles.js":{},"./src/renderers/shared/reconciler/ReactInstanceMap.js":{"21":{"begin":21,"end":21,"codeStart":22,"content":"TODO: Replace this with ES6: var ReactInstanceMap = new Map();\n","info":{"type":"singleline"},"code":"var ReactInstanceMap = {"}},"./src/renderers/shared/reconciler/ReactMultiChild.js":{},"./src/renderers/shared/reconciler/ReactMultiChildUpdateTypes.js":{},"./src/renderers/shared/reconciler/ReactNativeComponent.js":{},"./src/renderers/shared/reconciler/ReactOwner.js":{},"./src/renderers/shared/reconciler/ReactReconciler.js":{"108":{"begin":108,"end":109,"codeStart":110,"content":"TODO: Bailing out early is just a perf optimization right?\nTODO: Removing the return statement should affect correctness?\n","info":{"type":"singleline"},"code":"      return;"}},"./src/renderers/shared/reconciler/ReactRef.js":{"53":{"begin":53,"end":57,"codeStart":59,"content":"TODO: Should this even be possible? The owner cannot change because\nit's forbidden by shouldUpdateReactComponent. The ref can change\nif you swap the keys of but not the refs. Reconsider where this check\nis made. It probably belongs where the key checking and\ninstantiateReactComponent is done.\n","info":{"type":"singleline"},"code":"  var prevEmpty = prevElement === null || prevElement === false;"}},"./src/renderers/shared/reconciler/ReactSimpleEmptyComponent.js":{},"./src/renderers/shared/reconciler/ReactStateSetters.js":{},"./src/renderers/shared/reconciler/ReactUpdateQueue.js":{"140":{"begin":140,"end":143,"codeStart":144,"content":"TODO: The callback here is ignored when setState is called from\ncomponentWillMount. Either fix it or disallow doing so completely in\nfavor of getInitialState. Alternatively, we can disallow\ncomponentWillMount during server-side rendering.\n","info":{"type":"singleline"},"code":"    enqueueUpdate(internalInstance);"},"211":{"begin":211,"end":220,"codeStart":221,"content":"Sets a subset of the state. This only exists because _pendingState is\ninternal. This provides a merging strategy that is not available to deep\nproperties which is confusing. TODO: Expose pendingState or don't use it\nduring the merge.\n\n@param {ReactClass} publicInstance The instance that should rerender.\n@param {object} partialState Next partial state to be merged with state.\n@internal\n  ","info":{"type":"multiline","apidoc":true},"code":"  enqueueSetState: function(publicInstance, partialState) {"}},"./src/renderers/shared/reconciler/ReactUpdates.js":{},"./src/renderers/shared/reconciler/__tests__/ReactComponent-test.js":{},"./src/renderers/shared/reconciler/__tests__/ReactComponentLifeCycle-test.js":{"92":{"begin":92,"end":98,"codeStart":99,"content":"TODO: We should make any setState calls fail in\n`getInitialState` and `componentWillMount`. They will usually fail\nanyways because `this._renderedComponent` is empty, however, if a component\nis *reused*, then that won't be the case and things will appear to work in\nsome cases. Better to just block all updates in initialization.\n","info":{"type":"multiline","apidoc":true},"code":"describe('ReactComponentLifeCycle', function() {"}},"./src/renderers/shared/reconciler/__tests__/ReactCompositeComponent-test.js":{},"./src/renderers/shared/reconciler/__tests__/ReactCompositeComponentDOMMinimalism-test.js":{},"./src/renderers/shared/reconciler/__tests__/ReactCompositeComponentNestedState-test.js":{},"./src/renderers/shared/reconciler/__tests__/ReactCompositeComponentState-test.js":{},"./src/renderers/shared/reconciler/__tests__/ReactEmptyComponent-test.js":{"246":{"begin":246,"end":246,"codeStart":247,"content":"TODO: This should actually work since `null` is a valid ReactNode\n","info":{"type":"singleline"},"code":"    var div = document.createElement('div');"}},"./src/renderers/shared/reconciler/__tests__/ReactIdentity-test.js":{},"./src/renderers/shared/reconciler/__tests__/ReactMockedComponent-test.js":{},"./src/renderers/shared/reconciler/__tests__/ReactMultiChild-test.js":{},"./src/renderers/shared/reconciler/__tests__/ReactMultiChildReconcile-test.js":{"85":{"begin":85,"end":86,"codeStart":87,"content":"TODO: Update this to a better test that doesn't rely so much on internal\nimplementation details.\n","info":{"type":"singleline"},"code":"    var statusDisplays ="},"211":{"begin":211,"end":213,"codeStart":214,"content":"Todo: Check that internal state is preserved across transitions\n","info":{"type":"multiline","apidoc":true},"code":"function testPropsSequence(sequence) {"}},"./src/renderers/shared/reconciler/__tests__/ReactMultiChildText-test.js":{},"./src/renderers/shared/reconciler/__tests__/ReactStateSetters-test.js":{},"./src/renderers/shared/reconciler/__tests__/ReactStatelessComponent-test.js":{},"./src/renderers/shared/reconciler/__tests__/ReactUpdates-test.js":{},"./src/renderers/shared/reconciler/__tests__/refs-destruction-test.js":{},"./src/renderers/shared/reconciler/__tests__/refs-test.js":{},"./src/renderers/shared/reconciler/instantiateReactComponent.js":{},"./src/renderers/shared/reconciler/shouldUpdateReactComponent.js":{},"./src/shared/utils/CallbackQueue.js":{},"./src/shared/utils/PooledClass.js":{},"./src/shared/utils/ReactErrorUtils.js":{},"./src/shared/utils/ReactFeatureFlags.js":{},"./src/shared/utils/ReactNodeTypes.js":{},"./src/shared/utils/Transaction.js":{},"./src/shared/utils/__tests__/OrderedMap-test.js":{},"./src/shared/utils/__tests__/PooledClass-test.js":{},"./src/shared/utils/__tests__/Transaction-test.js":{},"./src/shared/utils/__tests__/accumulateInto-test.js":{},"./src/shared/utils/__tests__/adler32-test.js":{},"./src/shared/utils/__tests__/traverseAllChildren-test.js":{},"./src/shared/utils/accumulate.js":{},"./src/shared/utils/accumulateInto.js":{},"./src/shared/utils/adler32.js":{},"./src/shared/utils/canDefineProperty.js":{},"./src/shared/utils/deprecated.js":{},"./src/shared/utils/flattenChildren.js":{},"./src/shared/utils/forEachAccumulated.js":{},"./src/shared/utils/getIteratorFn.js":{},"./src/shared/utils/getNativeComponentFromComposite.js":{},"./src/shared/utils/isTextInputElement.js":{},"./src/shared/utils/traverseAllChildren.js":{"24":{"begin":24,"end":27,"codeStart":29,"content":"TODO: Test that a single child and an array with one item have the same key\npattern.\n","info":{"type":"multiline","apidoc":true},"code":"var userProvidedKeyEscaperLookup = {"}},"./src/shared/vendor/third_party/webcomponents.js":{},"./src/test/MetaMatchers.js":{"34":{"begin":34,"end":34,"codeStart":35,"content":"TODO: Bring over matchers from the existing environment.\n","info":{"type":"singleline"},"code":"  var runner = env.currentRunner();"}},"./src/test/ReactDefaultPerf.js":{"117":{"begin":117,"end":118,"codeStart":119,"content":"TODO: ReactDefaultPerfAnalysis.getTotalTime() does not return the correct\nnumber.\n","info":{"type":"singleline"},"code":"  },"},"198":{"begin":198,"end":198,"codeStart":199,"content":"TODO: totalTime isn't that useful since it doesn't count paints/reflows\n","info":{"type":"singleline"},"code":"    var entry ="}},"./src/test/ReactDefaultPerfAnalysis.js":{"33":{"begin":33,"end":36,"codeStart":37,"content":"TODO: return number of DOM ops? could be misleading.\nTODO: measure dropped frames after reconcile?\nTODO: log total time of each reconcile and the top-level component\nclass that triggered it.\n","info":{"type":"singleline"},"code":"  var totalTime = 0;"}},"./src/test/ReactPerf.js":{},"./src/test/ReactTestUtils.js":{"73":{"begin":73,"end":77,"codeStart":78,"content":"Todo: Support the entire DOM.scry query syntax. For now, these simple\nutilities will suffice for testing purposes.\n@lends ReactTestUtils\n","info":{"type":"multiline","apidoc":true},"code":"var ReactTestUtils = {"}},"./src/test/__tests__/MetaMatchers-test.js":{},"./src/test/__tests__/ReactDefaultPerf-test.js":{},"./src/test/__tests__/ReactTestUtils-test.js":{},"./src/test/__tests__/reactComponentExpect-test.js":{},"./src/test/createHierarchyRenderer.js":{},"./src/test/getTestDocument.js":{},"./src/test/reactComponentExpect.js":{"76":{"begin":76,"end":76,"codeStart":77,"content":"TODO: Hide ReactEmptyComponent instances here?\n","info":{"type":"singleline"},"code":"    return new reactComponentExpectInternal(child);"}},"./src/umd/ReactUMDEntry.js":{},"./src/umd/ReactWithAddonsUMDEntry.js":{},"./vendor/react-dom-server.js":{},"./vendor/react-dom.js":{}}
